user  nginx;
# number process create to handle request
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    # concurent connections;
    worker_connections  1024;
    multi_accept on;
    use epoll;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  30;
    #improvement
    keepalive_requests 1000;
    send_timeout 2;

    #
    open_file_cache max=1000 inactive=20s;
    open_file_cache_min_uses 100;
    #gzip  on;

   # include /etc/nginx/conf.d/*.conf;
   # proxy to google.com
   # using upstream to redirect request to specific server for load balancing
   upstream apache{
      server 172.16.26.24:8080;
   }

   server {
    listen 80;
    server_name live_nginx.com;
    root /data/nginx/public;
    index index.html;
    location / {
        proxy_pass http://apache;
    }

    # proxy to google.com
    location /google{
       proxy_pass https://www.google.com/;
    }

   }
   server {
       listen       80;
       server_name  demo_nginx.com;
       # compress
       gzip on;
       gzip_comp_level 2;
       gzip_min_length 1000;
       gzip_types text/js text/css text/plain application/javascript;
       gzip_buffers 16 8k;
       gzip_proxied any;

       #charset koi8-r;
       #access_log  /var/log/nginx/host.access.log  main;

       root /var/www/html/public;
       index index.php index.html index.htm;

       location ~ \.php$ {
           #because the working directory of php container is /code

           fastcgi_index   index.php;
           fastcgi_pass php:9000;
           include    fastcgi_params;
           fastcgi_param REQUEST_METHOD $request_method;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
           # forward request to php container

       }

       location / {
           try_files $uri $uri/ /index.php?$query_string;
       }

       location ^~ /css/ {
        root /var/www/html/public ;
        expires 1y;
        add_header Cache-Control "public";
       }

       location ^~ /data/fakecss/ {
            root /data/fakecss ;
       }

       location = /data/index.css {
        root /var/www/html/public/css;
        index index.css;
       }



       #error_page  404              /404.html;

       # redirect server error pages to the static page /50x.html
       #
       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
           root   /usr/share/nginx/html;
       }

       # proxy the PHP scripts to Apache listening on 127.0.0.1:80
       #
       #location ~ \.php$ {
       #    proxy_pass   http://127.0.0.1;
       #}

       # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
       #
       #location ~ \.php$ {
       #    root           html;
       #    fastcgi_pass   127.0.0.1:9000;
       #    fastcgi_index  index.php;
       #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
       #    include        fastcgi_params;
       #}

       # deny access to .htaccess files, if Apache's document root
       # concurs with nginx's one
       #
       #location ~ /\.ht {
       #    deny  all;
       #}
   }




}
